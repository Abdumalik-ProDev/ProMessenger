version: '3.8'

services:
  #--------------------------------#
  # INFRASTRUCTURE SERVICES        #
  #--------------------------------#

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  redis:
    image: "redis:alpine"
    container_name: redis
    ports:
      - "6379:6379"

  postgres-user:
    image: postgres:14-alpine
    container_name: postgres-user
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=user_db

  postgres-post:
    image: postgres:14-alpine
    container_name: postgres-post
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=post_db

  mongo-feed:
    image: mongo:5.0
    container_name: mongo-feed
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=feed_db

  mongo-notification:
    image: mongo:5.0
    container_name: mongo-notification
    ports:
      - "27018:27017"
    environment:
      - MONGO_INITDB_DATABASE=notification_db

  mongo-chat:
    image: mongo:5.0
    container_name: mongo-chat
    ports:
      - "27019:27017"
    environment:
      - MONGO_INITDB_DATABASE=chat_db

  neo4j:
    image: neo4j:4.4
    container_name: neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/password

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
    container_name: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node

  #--------------------------------#
  # APPLICATION MICROSERVICES      #
  #--------------------------------#

  eureka-server:
    image: eureka-server:0.0.1-SNAPSHOT # Assumes you have built this image locally
    container_name: eureka-server
    ports:
      - "8761:8761"

  api-gateway:
    image: api-gateway:0.0.1-SNAPSHOT
    container_name: api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - eureka-server
      - redis
    environment:
      - EUREKA_URI=http://eureka-server:8761/eureka
      - REDIS_HOST=redis

  user-service:
    image: user-service:0.0.1-SNAPSHOT
    container_name: user-service
    ports:
      - "8081:8081"
    depends_on:
      - eureka-server
      - postgres-user
      - kafka
    environment:
      - EUREKA_URI=http://eureka-server:8761/eureka
      - DB_HOST=postgres-user
      - DB_NAME=user_db
      - KAFKA_BROKERS=kafka:29092
      # These must be configured for OAuth2 to work
      - GOOGLE_CLIENT_ID=177061262177-5c9a564kgtotnqgcoouij5ro8gmsv1o1.apps.googleusercontent.com
      - GOOGLE_CLIENT_SECRET=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

  post-service:
    image: post-service:0.0.1-SNAPSHOT
    container_name: post-service
    ports:
      - "8082:8082"
    depends_on:
      - eureka-server
      - postgres-post
      - kafka
    environment:
      - EUREKA_URI=http://eureka-server:8761/eureka
      - DB_HOST=postgres-post
      - DB_NAME=post_db
      - KAFKA_BROKERS=kafka:29092

  feed-service:
    image: feed-service:0.0.1-SNAPSHOT
    container_name: feed-service
    ports:
      - "8083:8083"
    depends_on:
      - eureka-server
      - mongo-feed
      - kafka
    environment:
      - EUREKA_URI=http://eureka-server:8761/eureka
      - MONGO_HOST=mongo-feed
      - MONGO_DB=feed_db
      - KAFKA_BROKERS=kafka:29092

  graph-service:
    image: graph-service:0.0.1-SNAPSHOT
    container_name: graph-service
    ports:
      - "8084:8084"
    depends_on:
      - eureka-server
      - neo4j
      - kafka
    environment:
      - EUREKA_URI=http://eureka-server:8761/eureka
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASS=password
      - KAFKA_BROKERS=kafka:29092

  notification-service:
    image: notification-service:0.0.1-SNAPSHOT
    container_name: notification-service
    ports:
      - "8085:8085"
    depends_on:
      - eureka-server
      - mongo-notification
      - kafka
    environment:
      - EUREKA_URI=http://eureka-server:8761/eureka
      - MONGO_HOST=mongo-notification
      - MONGO_DB=notification_db
      - KAFKA_BROKERS=kafka:29092

  chat-service:
    image: chat-service:0.0.1-SNAPSHOT
    container_name: chat-service
    ports:
      - "8086:8086"
    depends_on:
      - eureka-server
      - mongo-chat
      - kafka
    environment:
      - EUREKA_URI=http://eureka-server:8761/eureka
      - MONGO_HOST=mongo-chat
      - MONGO_DB=chat_db
      - KAFKA_BROKERS=kafka:29092

  search-service:
    image: search-service:0.0.1-SNAPSHOT
    container_name: search-service
    ports:
      - "8087:8087"
    depends_on:
      - eureka-server
      - elasticsearch
      - kafka
    environment:
      - EUREKA_URI=http://eureka-server:8761/eureka
      - ES_URIS=http://elasticsearch:9200
      - KAFKA_BROKERS=kafka:29092